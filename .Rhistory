cantidad_na <- sapply(BD_Ent_Hog_Lim, function(x) sum(is.na(x)))
cantidad_na <- data.frame(cantidad_na)
porcentaje_na <- cantidad_na/nrow(BD_Ent_Hog_Lim)
porcentaje_na <- arrange(porcentaje_na, desc(cantidad_na)) # Ordenamos de mayor a menor
porcentaje_na <- rownames_to_column(porcentaje_na, "variable")# Convertierte el nombre de la fila en columna
#3. BD_Pru_Per
#borrar variables q no se consideran útiles
BD_Pru_Per_Lim<-BD_Pru_Per %>%
select(-"P6426",-"P6510",-"P6545",-"P6580",-"P6585s1",-"P6585s2",-"P6585s3",
-"P6585s4",-"P6600",-"P6610",-"P6630s1",-"P6630s2",-"P6630s3",-"P6630s4",
-"P6630s6",-"P6870",-"P7045",-"P7050",-"P7110",-"P7120",-"P7150",
-"P7160",-"P7350",-"P7500s2",-"P7500s3",-"P7510s1",-"P7510s2",
-"P7510s3",-"P7510s5",-"P7510s6",-"P7510s7",-"Fex_c",-"Depto",-"Fex_dpto",
-"P7310",-"P6590",-"P6620",-"P7472",-"P7422",-"P6920",-"Oficio",-"P6430",
-"P6800",-"P7040",-"P7090",-"P6100"
)
#convierto na en ceros de Pet, Oc, Des, Ina
BD_Pru_Per_Lim <- mutate_at(BD_Pru_Per_Lim, c("Pet","Oc","Des","Ina"), ~replace(., is.na(.), 0))
##Asignar NA´s a cat 9
BD_Pru_Per_Lim$P6090 <-ifelse(is.na(BD_Pru_Per_Lim$P6090)==T,  9,BD_Pru_Per_Lim$P6090)
#borrar variable de grado - P6210s1, dado que ya tenemos escolaridad en P6210
BD_Pru_Per_Lim<-BD_Pru_Per_Lim %>% select(-"P6210s1")
#borrar variable de en que ocupo tiempo semana antr - P6240
BD_Pru_Per_Lim<-BD_Pru_Per_Lim %>% select(-"P6240")
#Variable ¿recibió pagos por concepto de arriendos y/o pensiones? (P7495),
BD_Pru_Per_Lim<-BD_Pru_Per_Lim%>%subset(is.na(P7495)==F)   ##Borrar NA´s
#Durante los últimos doce meses, ¿recibió dinero de otros hogares,
#personas o instituciones no gubernamentales; dinero por intereses,
#dividendos, utilidades o por cesantias? (P7505)
BD_Pru_Per_Lim<-BD_Pru_Per_Lim%>%subset(is.na(P7505)==F)   ##Borrar NA´s
#P6210 asigno Na´s a cat 9
BD_Pru_Per_Lim$P6210 <-ifelse(is.na(BD_Pru_Per_Lim$P6210)==T,  9,BD_Pru_Per_Lim$P6210)
#Volver variables categoricas
BD_Pru_Per_Lim <- BD_Pru_Per_Lim %>%
mutate_at(.vars = c("Clase","Dominio","Pet","Oc","Des","Ina","P6020","P6040","P6050",
"P6090","P6210"
,"P7495","P7505"),
.funs = factor)
#Na´s
cantidad_na <- sapply(BD_Pru_Per_Lim, function(x) sum(is.na(x)))
cantidad_na <- data.frame(cantidad_na)
porcentaje_na <- cantidad_na/nrow(BD_Pru_Per_Lim)
porcentaje_na <- arrange(porcentaje_na, desc(cantidad_na)) # Ordenamos de mayor a menor
porcentaje_na <- rownames_to_column(porcentaje_na, "variable")# Convertierte el nombre de la fila en columna
write.csv(porcentaje_na, file="CantidadNa_BD_Pru_Per_LimV2.csv", row.names = FALSE)
#4. BD_Ent_Per
#borrar variables q no se consideran útiles
BD_Ent_Per_Lim<-BD_Ent_Per %>%
select(-"P6426",-"P6430",-"P6510",-"P6545",-"P6580",-"P6585s1",-"P6585s2",-"P6585s3",
-"P6585s4",-"P6600",-"P6610",-"P6620",-"P6630s1",-"P6630s2",-"P6630s3",-"P6630s4",
-"P6630s6",-"P6870",-"P7040",-"P7045",-"P7050",-"P7090",-"P7110",-"P7120",-"P7150",
-"P7160",-"P7310",-"P7350",-"P7422",-"P7500s2",-"P7500s3",-"P7510s1",-"P7510s2",
-"P7510s3",-"P7510s5",-"P7510s6",-"P7510s7",-"Fex_c",-"Depto",-"Fex_dpto",
-"Estrato1",-"P6500",-"P6510s1",-"P6510s2",-"P6545s1",-"P6545s2",-"P6580s1",
-"P6580s2",-"P6585s1a1",-"P6585s1a2",-"P6585s2a1",-"P6585s2a2",-"P6585s3a1"
,-"P6585s3a2",-"P6585s4a1",-"P6585s4a2",-"P6590s1",-"P6600s1",-"P6610s1",
-"P6620s1",-"P6630s1a1",-"P6630s2a1",-"P6630s3a1",-"P6630s4a1",-"P6630s6a1"
,-"P6750",-"P6760",-"P550",-"P7070",-"P7140s1",-"P7140s2",-"P7422s1",
-"P7472s1",-"P7500s1",-"P7500s1a1",-"P7500s2a1",-"P7500s3a1",-"P7510s1a1"
,-"P7510s2a1",-"P7510s3a1",-"P7510s5a1",-"P7510s6a1",-"P7510s7a1",
-"Impa",-"Isa",-"Ie",-"Imdi",-"Iof1",-"Iof2",-"Iof3h",-"Iof3i",-"Iof6",-"Cclasnr2",
-"Cclasnr3",-"Cclasnr4",-"Cclasnr5",-"Cclasnr6",-"Cclasnr7",-"Cclasnr8",-"Cclasnr11",
-"Impaes",-"Isaes",-"Iees",-"Imdies",-"Iof1es",-"Iof2es",-"Iof3hes",-"Iof3ies",
-"Iof6es",-"Ingtotob",-"Ingtotes",
-"P6590",-"P7472",-"P6920",-"Oficio",-"P6800",-"P6210s1",-"P6240",-"P6100")
#convierto na en ceros de Pet, Oc, Des, Ina
BD_Ent_Per_Lim <- mutate_at(BD_Ent_Per_Lim, c("Pet","Oc","Des","Ina"), ~replace(., is.na(.), 0))
#Variable ¿recibió pagos por concepto de arriendos y/o pensiones? (P7495)
BD_Ent_Per_Lim<-BD_Ent_Per_Lim%>%subset(is.na(P7495)==F)   ##Borrar NA´s
#Durante los últimos doce meses, ¿recibió dinero de otros hogares,
#personas o instituciones no gubernamentales; dinero por intereses,
#dividendos, utilidades o por cesantias? (P7505)
BD_Ent_Per_Lim<-BD_Ent_Per_Lim%>%subset(is.na(P7505)==F)   ##Borrar NA´s
##Asignar NA´s a cat 9
BD_Ent_Per_Lim$P6090 <-ifelse(is.na(BD_Ent_Per_Lim$P6090)==T,  9,BD_Ent_Per_Lim$P6090)
#Volver variables categoricas
BD_Ent_Per_Lim <- BD_Ent_Per_Lim %>%
mutate_at(.vars = c("Clase","Dominio","P6020","P6050","P6090",
"P7495","P6210","P7505","Pet","Oc","Des","Ina"),
.funs = factor)
#Na´s
cantidad_na <- sapply(BD_Ent_Per_Lim, function(x) sum(is.na(x)))
cantidad_na <- data.frame(cantidad_na)
porcentaje_na <- cantidad_na/nrow(BD_Ent_Per_Lim)
porcentaje_na <- arrange(porcentaje_na, desc(cantidad_na)) # Ordenamos de mayor a menor
porcentaje_na <- rownames_to_column(porcentaje_na, "variable")# Convertierte el nombre de la fila en columna
write.csv(porcentaje_na, file="CantidadNa_BD_Ent_Per_Lim.csv", row.names = FALSE)
#Unir bases de datos individuales a hogares ---------------------------------------------------------
# 1. Pretratamiento BD_Ent_Per_Lim
#p6020, sexo, no relevante
#p6040, edad, no relevante
#p6050, parentesco con jefe hogar, 1 Jefe Hogar
VectorAuxIngreso<- BD_Ent_Per_Lim %>% group_by(id) %>%
summarize(sum_Ingtot=sum(Ingtot))
dim(VectorAuxIngreso)
#p6090, cotizante-beneficiario seg social, 1 si, 2 no, 9 no sabe
table(BD_Ent_Per_Lim$P6090) # sirve
#p6210, Max educ. 1.Ninguno 2.Prescolar 3.Primaria 4.Secundaria 5.Media 6.Superior 9. No sabe
table(BD_Ent_Per_Lim$P6210) # sirve
#p7495, Recibio pago por arriendo y/o pension? 1. Si 2. No
table(BD_Ent_Per_Lim$P7495) # sirve
#p7505, Recibio dinero de otros hogares, instituciones, intereses, dividendos o uti censantias. 1.Si 2.No
table(BD_Ent_Per_Lim$P7505) # sirve
#con lo siguiente queda solo info del jefe hogar
BD_Ent_Per_Lim<-BD_Ent_Per_Lim%>%subset(P6050=="1")
dim(BD_Ent_Per_Lim)
#unir BD_Ent_Per_Lim con VectorAuxIngreso
BD_Ent_Per_Lim<-left_join(BD_Ent_Per_Lim,VectorAuxIngreso, by="id")
dim(BD_Ent_Per_Lim)
#borrar variables q ya no sirve
BD_Ent_Per_Lim<-BD_Ent_Per_Lim %>%
select(-"Ingtot",-"Clase",-"DOminio")
#borrar variables q ya no sirve
BD_Ent_Per_Lim<-BD_Ent_Per_Lim %>%
select(-"Ingtot",-"Clase",-"Dominio")
dim(BD_Ent_Hog_Lim)
dim(BD_Ent_Per_Lim)
BD_Ent_Hog_Lim<-left_join(BD_Ent_Hog_Lim,BD_Ent_Per_Lim, by="id")
dim(BD_Ent_Hog_Lim)
View(BD_Ent_Hog_Lim)
View(BD_Pru_Hog_Lim)
View(BD_Pru_Per_Lim)
View(BD_Pru_Per_Lim)
#p6090, cotizante-beneficiario seg social, 1 si, 2 no, 9 no sabe
table(BD_Pru_Per_Lim$P6090) # sirve
#p6210, Max educ. 1.Ninguno 2.Prescolar 3.Primaria 4.Secundaria 5.Media 6.Superior 9. No sabe
table(BD_Pru_Per_Lim$P6210) # sirve
#p7495, Recibio pago por arriendo y/o pension? 1. Si 2. No
table(BD_Pru_Per_Lim$P7495) # sirve
#p7505, Recibio dinero de otros hogares, instituciones, intereses, dividendos o uti censantias. 1.Si 2.No
table(BD_Pru_Per_Lim$P7505) # sirve
#p6090, cotizante-beneficiario seg social, 1 si, 2 no, 9 no sabe
table(BD_Pru_Per_Lim$P6090) # sirve
#p6210, Max educ. 1.Ninguno 2.Prescolar 3.Primaria 4.Secundaria 5.Media 6.Superior 9. No sabe
table(BD_Pru_Per_Lim$P6210) # sirve
#p7495, Recibio pago por arriendo y/o pension? 1. Si 2. No
table(BD_Pru_Per_Lim$P7495) # sirve
#p7505, Recibio dinero de otros hogares, instituciones, intereses, dividendos o uti censantias. 1.Si 2.No
table(BD_Pru_Per_Lim$P7505) # sirve
#con lo siguiente queda solo info del jefe hogar
BD_Ent_Pru_Lim<-BD_Pru_Per_Lim%>%subset(P6050=="1")
dim(BD_Pru_Per_Lim)
rm(list=ls()) ## Limpiar el entorno de trabajo
#Librerias-------------------------------------------------------------------------------
library(tidyverse)
require(pacman)
require(dplyr)
p_load(rio) # Librería para importar datos
p_load(tidyverse) # Librería para limpiar datos
p_load(e1071) # Tiene la función para calcular skewness
p_load(EnvStats) # Transformación Box-Cox
p_load(tidymodels) # Modelos ML
p_load(ggplot2) # Librería para visualizar datos
p_load(scales) # Formato de los ejes en las gráficas
p_load(ggpubr) # Combinar gráficas
p_load(knitr) # Tablas dentro de Rmarkdown
p_load(kableExtra) # Tablas dentro de Rmarkdown
#Lectura bases de datos ----------------------------------------------------------------
getwd() #Establezco mi directorio
BD_Pru_Hog<-readRDS("test_hogares.Rds")
BD_Pru_Per<-readRDS("test_personas.Rds")
BD_Ent_Hog<-readRDS("train_hogares.Rds")
BD_Ent_Per<-readRDS("train_personas.Rds")
#Limpieza de datos ---------------------------------------------------------------------
#1. BD_Pru_Hog
#borrar variables q no se consideran útiles
BD_Pru_Hog_Lim<-BD_Pru_Hog %>%
select(-"Depto",-"P5100",-"P5130",-"P5140")
#Volver variables categoricas
BD_Pru_Hog_Lim <- BD_Pru_Hog_Lim %>%
mutate_at(.vars = c("Clase","Dominio","P5090"),
.funs = factor)
#Na´s
cantidad_na <- sapply(BD_Pru_Hog_Lim, function(x) sum(is.na(x)))
cantidad_na <- data.frame(cantidad_na)
porcentaje_na <- cantidad_na/nrow(BD_Pru_Hog_Lim)
porcentaje_na <- arrange(porcentaje_na, desc(cantidad_na)) # Ordenamos de mayor a menor
porcentaje_na <- rownames_to_column(porcentaje_na, "variable")# Convertierte el nombre de la fila en columna
#2. BD_Ent_Hog
#borrar variables q no se consideran útiles
BD_Ent_Hog_Lim<-BD_Ent_Hog %>%
select(-"Depto",-"P5100",-"P5130",-"P5140")
#Volver variables categoricas
BD_Ent_Hog_Lim <- BD_Ent_Hog_Lim %>%
mutate_at(.vars = c("Clase","Dominio","P5090","Pobre","Indigente"),
.funs = factor)
#Na´s
cantidad_na <- sapply(BD_Ent_Hog_Lim, function(x) sum(is.na(x)))
cantidad_na <- data.frame(cantidad_na)
porcentaje_na <- cantidad_na/nrow(BD_Ent_Hog_Lim)
porcentaje_na <- arrange(porcentaje_na, desc(cantidad_na)) # Ordenamos de mayor a menor
porcentaje_na <- rownames_to_column(porcentaje_na, "variable")# Convertierte el nombre de la fila en columna
#3. BD_Pru_Per
#borrar variables q no se consideran útiles
BD_Pru_Per_Lim<-BD_Pru_Per %>%
select(-"P6426",-"P6510",-"P6545",-"P6580",-"P6585s1",-"P6585s2",-"P6585s3",
-"P6585s4",-"P6600",-"P6610",-"P6630s1",-"P6630s2",-"P6630s3",-"P6630s4",
-"P6630s6",-"P6870",-"P7045",-"P7050",-"P7110",-"P7120",-"P7150",
-"P7160",-"P7350",-"P7500s2",-"P7500s3",-"P7510s1",-"P7510s2",
-"P7510s3",-"P7510s5",-"P7510s6",-"P7510s7",-"Fex_c",-"Depto",-"Fex_dpto",
-"P7310",-"P6590",-"P6620",-"P7472",-"P7422",-"P6920",-"Oficio",-"P6430",
-"P6800",-"P7040",-"P7090",-"P6100"
)
#convierto na en ceros de Pet, Oc, Des, Ina
BD_Pru_Per_Lim <- mutate_at(BD_Pru_Per_Lim, c("Pet","Oc","Des","Ina"), ~replace(., is.na(.), 0))
##Asignar NA´s a cat 9
BD_Pru_Per_Lim$P6090 <-ifelse(is.na(BD_Pru_Per_Lim$P6090)==T,  9,BD_Pru_Per_Lim$P6090)
#borrar variable de grado - P6210s1, dado que ya tenemos escolaridad en P6210
BD_Pru_Per_Lim<-BD_Pru_Per_Lim %>% select(-"P6210s1")
#borrar variable de en que ocupo tiempo semana antr - P6240
BD_Pru_Per_Lim<-BD_Pru_Per_Lim %>% select(-"P6240")
#Variable ¿recibió pagos por concepto de arriendos y/o pensiones? (P7495),
BD_Pru_Per_Lim<-BD_Pru_Per_Lim%>%subset(is.na(P7495)==F)   ##Borrar NA´s
#Durante los últimos doce meses, ¿recibió dinero de otros hogares,
#personas o instituciones no gubernamentales; dinero por intereses,
#dividendos, utilidades o por cesantias? (P7505)
BD_Pru_Per_Lim<-BD_Pru_Per_Lim%>%subset(is.na(P7505)==F)   ##Borrar NA´s
#P6210 asigno Na´s a cat 9
BD_Pru_Per_Lim$P6210 <-ifelse(is.na(BD_Pru_Per_Lim$P6210)==T,  9,BD_Pru_Per_Lim$P6210)
#Volver variables categoricas
BD_Pru_Per_Lim <- BD_Pru_Per_Lim %>%
mutate_at(.vars = c("Clase","Dominio","Pet","Oc","Des","Ina","P6020","P6040","P6050",
"P6090","P6210"
,"P7495","P7505"),
.funs = factor)
#Na´s
cantidad_na <- sapply(BD_Pru_Per_Lim, function(x) sum(is.na(x)))
cantidad_na <- data.frame(cantidad_na)
porcentaje_na <- cantidad_na/nrow(BD_Pru_Per_Lim)
porcentaje_na <- arrange(porcentaje_na, desc(cantidad_na)) # Ordenamos de mayor a menor
porcentaje_na <- rownames_to_column(porcentaje_na, "variable")# Convertierte el nombre de la fila en columna
write.csv(porcentaje_na, file="CantidadNa_BD_Pru_Per_LimV2.csv", row.names = FALSE)
#4. BD_Ent_Per
#borrar variables q no se consideran útiles
BD_Ent_Per_Lim<-BD_Ent_Per %>%
select(-"P6426",-"P6430",-"P6510",-"P6545",-"P6580",-"P6585s1",-"P6585s2",-"P6585s3",
-"P6585s4",-"P6600",-"P6610",-"P6620",-"P6630s1",-"P6630s2",-"P6630s3",-"P6630s4",
-"P6630s6",-"P6870",-"P7040",-"P7045",-"P7050",-"P7090",-"P7110",-"P7120",-"P7150",
-"P7160",-"P7310",-"P7350",-"P7422",-"P7500s2",-"P7500s3",-"P7510s1",-"P7510s2",
-"P7510s3",-"P7510s5",-"P7510s6",-"P7510s7",-"Fex_c",-"Depto",-"Fex_dpto",
-"Estrato1",-"P6500",-"P6510s1",-"P6510s2",-"P6545s1",-"P6545s2",-"P6580s1",
-"P6580s2",-"P6585s1a1",-"P6585s1a2",-"P6585s2a1",-"P6585s2a2",-"P6585s3a1"
,-"P6585s3a2",-"P6585s4a1",-"P6585s4a2",-"P6590s1",-"P6600s1",-"P6610s1",
-"P6620s1",-"P6630s1a1",-"P6630s2a1",-"P6630s3a1",-"P6630s4a1",-"P6630s6a1"
,-"P6750",-"P6760",-"P550",-"P7070",-"P7140s1",-"P7140s2",-"P7422s1",
-"P7472s1",-"P7500s1",-"P7500s1a1",-"P7500s2a1",-"P7500s3a1",-"P7510s1a1"
,-"P7510s2a1",-"P7510s3a1",-"P7510s5a1",-"P7510s6a1",-"P7510s7a1",
-"Impa",-"Isa",-"Ie",-"Imdi",-"Iof1",-"Iof2",-"Iof3h",-"Iof3i",-"Iof6",-"Cclasnr2",
-"Cclasnr3",-"Cclasnr4",-"Cclasnr5",-"Cclasnr6",-"Cclasnr7",-"Cclasnr8",-"Cclasnr11",
-"Impaes",-"Isaes",-"Iees",-"Imdies",-"Iof1es",-"Iof2es",-"Iof3hes",-"Iof3ies",
-"Iof6es",-"Ingtotob",-"Ingtotes",
-"P6590",-"P7472",-"P6920",-"Oficio",-"P6800",-"P6210s1",-"P6240",-"P6100")
#convierto na en ceros de Pet, Oc, Des, Ina
BD_Ent_Per_Lim <- mutate_at(BD_Ent_Per_Lim, c("Pet","Oc","Des","Ina"), ~replace(., is.na(.), 0))
#Variable ¿recibió pagos por concepto de arriendos y/o pensiones? (P7495)
BD_Ent_Per_Lim<-BD_Ent_Per_Lim%>%subset(is.na(P7495)==F)   ##Borrar NA´s
#Durante los últimos doce meses, ¿recibió dinero de otros hogares,
#personas o instituciones no gubernamentales; dinero por intereses,
#dividendos, utilidades o por cesantias? (P7505)
BD_Ent_Per_Lim<-BD_Ent_Per_Lim%>%subset(is.na(P7505)==F)   ##Borrar NA´s
##Asignar NA´s a cat 9
BD_Ent_Per_Lim$P6090 <-ifelse(is.na(BD_Ent_Per_Lim$P6090)==T,  9,BD_Ent_Per_Lim$P6090)
#Volver variables categoricas
BD_Ent_Per_Lim <- BD_Ent_Per_Lim %>%
mutate_at(.vars = c("Clase","Dominio","P6020","P6050","P6090",
"P7495","P6210","P7505","Pet","Oc","Des","Ina"),
.funs = factor)
#Na´s
cantidad_na <- sapply(BD_Ent_Per_Lim, function(x) sum(is.na(x)))
cantidad_na <- data.frame(cantidad_na)
porcentaje_na <- cantidad_na/nrow(BD_Ent_Per_Lim)
porcentaje_na <- arrange(porcentaje_na, desc(cantidad_na)) # Ordenamos de mayor a menor
porcentaje_na <- rownames_to_column(porcentaje_na, "variable")# Convertierte el nombre de la fila en columna
write.csv(porcentaje_na, file="CantidadNa_BD_Ent_Per_Lim.csv", row.names = FALSE)
#Unir bases de datos individuales a hogares ---------------------------------------------------------
# 1. Pretratamiento BD_Ent_Per_Lim
#p6020, sexo, no relevante
#p6040, edad, no relevante
#p6050, parentesco con jefe hogar, 1 Jefe Hogar
VectorAuxIngreso<- BD_Ent_Per_Lim %>% group_by(id) %>%
summarize(sum_Ingtot=sum(Ingtot))
dim(VectorAuxIngreso)
#p6090, cotizante-beneficiario seg social, 1 si, 2 no, 9 no sabe
table(BD_Ent_Per_Lim$P6090) # sirve
#p6210, Max educ. 1.Ninguno 2.Prescolar 3.Primaria 4.Secundaria 5.Media 6.Superior 9. No sabe
table(BD_Ent_Per_Lim$P6210) # sirve
#p7495, Recibio pago por arriendo y/o pension? 1. Si 2. No
table(BD_Ent_Per_Lim$P7495) # sirve
#p7505, Recibio dinero de otros hogares, instituciones, intereses, dividendos o uti censantias. 1.Si 2.No
table(BD_Ent_Per_Lim$P7505) # sirve
#con lo siguiente queda solo info del jefe hogar
BD_Ent_Per_Lim<-BD_Ent_Per_Lim%>%subset(P6050=="1")
dim(BD_Ent_Per_Lim)
#unir BD_Ent_Per_Lim con VectorAuxIngreso
BD_Ent_Per_Lim<-left_join(BD_Ent_Per_Lim,VectorAuxIngreso, by="id")
dim(BD_Ent_Per_Lim)
#borrar variables q ya no sirve
BD_Ent_Per_Lim<-BD_Ent_Per_Lim %>%
select(-"Ingtot",-"Clase",-"Dominio")
#2. Unir bases de datos de entrenamiento
dim(BD_Ent_Hog_Lim)
dim(BD_Ent_Per_Lim)
BD_Ent_Hog_Lim<-left_join(BD_Ent_Hog_Lim,BD_Ent_Per_Lim, by="id")
dim(BD_Ent_Hog_Lim)
# 3. Pretratamiento BD_Pru_Per_Lim
#p6020, sexo, no relevante
#p6040, edad, no relevante
#p6050, parentesco con jefe hogar, 1 Jefe Hogar
#p6090, cotizante-beneficiario seg social, 1 si, 2 no, 9 no sabe
table(BD_Pru_Per_Lim$P6090) # sirve
#p6210, Max educ. 1.Ninguno 2.Prescolar 3.Primaria 4.Secundaria 5.Media 6.Superior 9. No sabe
table(BD_Pru_Per_Lim$P6210) # sirve
#p7495, Recibio pago por arriendo y/o pension? 1. Si 2. No
table(BD_Pru_Per_Lim$P7495) # sirve
#p7505, Recibio dinero de otros hogares, instituciones, intereses, dividendos o uti censantias. 1.Si 2.No
table(BD_Pru_Per_Lim$P7505) # sirve
#con lo siguiente queda solo info del jefe hogar
BD_Pru_Per_Lim<-BD_Pru_Per_Lim%>%subset(P6050=="1")
dim(BD_Pru_Per_Lim)
#borrar variables q ya no sirve
BD_Pru_Per_Lim<-BD_Pru_Per_Lim %>%
select(-"Clase",-"Dominio")
#2. Unir bases de datos de entrenamiento
dim(BD_Pru_Hog_Lim)
dim(BD_Pru_Per_Lim)
BD_Pru_Hog_Lim<-left_join(BD_Pru_Hog_Lim,BD_Pru_Per_Lim, by="id")
dim(BD_Pru_Hog_Lim)
rm(list=ls()) ## Limpiar el entorno de trabajo
#Librerias-------------------------------------------------------------------------------
library(tidyverse)
require(pacman)
require(dplyr)
p_load(rio) # Librería para importar datos
p_load(tidyverse) # Librería para limpiar datos
p_load(e1071) # Tiene la función para calcular skewness
p_load(EnvStats) # Transformación Box-Cox
p_load(tidymodels) # Modelos ML
p_load(ggplot2) # Librería para visualizar datos
p_load(scales) # Formato de los ejes en las gráficas
p_load(ggpubr) # Combinar gráficas
p_load(knitr) # Tablas dentro de Rmarkdown
p_load(kableExtra) # Tablas dentro de Rmarkdown
#Lectura bases de datos ----------------------------------------------------------------
getwd() #Establezco mi directorio
BD_Pru_Hog<-readRDS("test_hogares.Rds")
BD_Pru_Per<-readRDS("test_personas.Rds")
BD_Ent_Hog<-readRDS("train_hogares.Rds")
BD_Ent_Per<-readRDS("train_personas.Rds")
#Limpieza de datos ---------------------------------------------------------------------
#1. BD_Pru_Hog
#borrar variables q no se consideran útiles
BD_Pru_Hog_Lim<-BD_Pru_Hog %>%
select(-"Depto",-"P5100",-"P5130",-"P5140")
#Volver variables categoricas
BD_Pru_Hog_Lim <- BD_Pru_Hog_Lim %>%
mutate_at(.vars = c("Clase","Dominio","P5090"),
.funs = factor)
#Na´s
cantidad_na <- sapply(BD_Pru_Hog_Lim, function(x) sum(is.na(x)))
cantidad_na <- data.frame(cantidad_na)
porcentaje_na <- cantidad_na/nrow(BD_Pru_Hog_Lim)
porcentaje_na <- arrange(porcentaje_na, desc(cantidad_na)) # Ordenamos de mayor a menor
porcentaje_na <- rownames_to_column(porcentaje_na, "variable")# Convertierte el nombre de la fila en columna
#2. BD_Ent_Hog
#borrar variables q no se consideran útiles
BD_Ent_Hog_Lim<-BD_Ent_Hog %>%
select(-"Depto",-"P5100",-"P5130",-"P5140")
#Volver variables categoricas
BD_Ent_Hog_Lim <- BD_Ent_Hog_Lim %>%
mutate_at(.vars = c("Clase","Dominio","P5090","Pobre","Indigente"),
.funs = factor)
#Na´s
cantidad_na <- sapply(BD_Ent_Hog_Lim, function(x) sum(is.na(x)))
cantidad_na <- data.frame(cantidad_na)
porcentaje_na <- cantidad_na/nrow(BD_Ent_Hog_Lim)
porcentaje_na <- arrange(porcentaje_na, desc(cantidad_na)) # Ordenamos de mayor a menor
porcentaje_na <- rownames_to_column(porcentaje_na, "variable")# Convertierte el nombre de la fila en columna
#3. BD_Pru_Per
#borrar variables q no se consideran útiles
BD_Pru_Per_Lim<-BD_Pru_Per %>%
select(-"P6426",-"P6510",-"P6545",-"P6580",-"P6585s1",-"P6585s2",-"P6585s3",
-"P6585s4",-"P6600",-"P6610",-"P6630s1",-"P6630s2",-"P6630s3",-"P6630s4",
-"P6630s6",-"P6870",-"P7045",-"P7050",-"P7110",-"P7120",-"P7150",
-"P7160",-"P7350",-"P7500s2",-"P7500s3",-"P7510s1",-"P7510s2",
-"P7510s3",-"P7510s5",-"P7510s6",-"P7510s7",-"Fex_c",-"Depto",-"Fex_dpto",
-"P7310",-"P6590",-"P6620",-"P7472",-"P7422",-"P6920",-"Oficio",-"P6430",
-"P6800",-"P7040",-"P7090",-"P6100"
)
#convierto na en ceros de Pet, Oc, Des, Ina
BD_Pru_Per_Lim <- mutate_at(BD_Pru_Per_Lim, c("Pet","Oc","Des","Ina"), ~replace(., is.na(.), 0))
##Asignar NA´s a cat 9
BD_Pru_Per_Lim$P6090 <-ifelse(is.na(BD_Pru_Per_Lim$P6090)==T,  9,BD_Pru_Per_Lim$P6090)
#borrar variable de grado - P6210s1, dado que ya tenemos escolaridad en P6210
BD_Pru_Per_Lim<-BD_Pru_Per_Lim %>% select(-"P6210s1")
#borrar variable de en que ocupo tiempo semana antr - P6240
BD_Pru_Per_Lim<-BD_Pru_Per_Lim %>% select(-"P6240")
#Variable ¿recibió pagos por concepto de arriendos y/o pensiones? (P7495),
BD_Pru_Per_Lim<-BD_Pru_Per_Lim%>%subset(is.na(P7495)==F)   ##Borrar NA´s
#Durante los últimos doce meses, ¿recibió dinero de otros hogares,
#personas o instituciones no gubernamentales; dinero por intereses,
#dividendos, utilidades o por cesantias? (P7505)
BD_Pru_Per_Lim<-BD_Pru_Per_Lim%>%subset(is.na(P7505)==F)   ##Borrar NA´s
#P6210 asigno Na´s a cat 9
BD_Pru_Per_Lim$P6210 <-ifelse(is.na(BD_Pru_Per_Lim$P6210)==T,  9,BD_Pru_Per_Lim$P6210)
#Volver variables categoricas
BD_Pru_Per_Lim <- BD_Pru_Per_Lim %>%
mutate_at(.vars = c("Clase","Dominio","Pet","Oc","Des","Ina","P6020","P6040","P6050",
"P6090","P6210"
,"P7495","P7505"),
.funs = factor)
#Na´s
cantidad_na <- sapply(BD_Pru_Per_Lim, function(x) sum(is.na(x)))
cantidad_na <- data.frame(cantidad_na)
porcentaje_na <- cantidad_na/nrow(BD_Pru_Per_Lim)
porcentaje_na <- arrange(porcentaje_na, desc(cantidad_na)) # Ordenamos de mayor a menor
porcentaje_na <- rownames_to_column(porcentaje_na, "variable")# Convertierte el nombre de la fila en columna
write.csv(porcentaje_na, file="CantidadNa_BD_Pru_Per_LimV2.csv", row.names = FALSE)
#4. BD_Ent_Per
#borrar variables q no se consideran útiles
BD_Ent_Per_Lim<-BD_Ent_Per %>%
select(-"P6426",-"P6430",-"P6510",-"P6545",-"P6580",-"P6585s1",-"P6585s2",-"P6585s3",
-"P6585s4",-"P6600",-"P6610",-"P6620",-"P6630s1",-"P6630s2",-"P6630s3",-"P6630s4",
-"P6630s6",-"P6870",-"P7040",-"P7045",-"P7050",-"P7090",-"P7110",-"P7120",-"P7150",
-"P7160",-"P7310",-"P7350",-"P7422",-"P7500s2",-"P7500s3",-"P7510s1",-"P7510s2",
-"P7510s3",-"P7510s5",-"P7510s6",-"P7510s7",-"Fex_c",-"Depto",-"Fex_dpto",
-"Estrato1",-"P6500",-"P6510s1",-"P6510s2",-"P6545s1",-"P6545s2",-"P6580s1",
-"P6580s2",-"P6585s1a1",-"P6585s1a2",-"P6585s2a1",-"P6585s2a2",-"P6585s3a1"
,-"P6585s3a2",-"P6585s4a1",-"P6585s4a2",-"P6590s1",-"P6600s1",-"P6610s1",
-"P6620s1",-"P6630s1a1",-"P6630s2a1",-"P6630s3a1",-"P6630s4a1",-"P6630s6a1"
,-"P6750",-"P6760",-"P550",-"P7070",-"P7140s1",-"P7140s2",-"P7422s1",
-"P7472s1",-"P7500s1",-"P7500s1a1",-"P7500s2a1",-"P7500s3a1",-"P7510s1a1"
,-"P7510s2a1",-"P7510s3a1",-"P7510s5a1",-"P7510s6a1",-"P7510s7a1",
-"Impa",-"Isa",-"Ie",-"Imdi",-"Iof1",-"Iof2",-"Iof3h",-"Iof3i",-"Iof6",-"Cclasnr2",
-"Cclasnr3",-"Cclasnr4",-"Cclasnr5",-"Cclasnr6",-"Cclasnr7",-"Cclasnr8",-"Cclasnr11",
-"Impaes",-"Isaes",-"Iees",-"Imdies",-"Iof1es",-"Iof2es",-"Iof3hes",-"Iof3ies",
-"Iof6es",-"Ingtotob",-"Ingtotes",
-"P6590",-"P7472",-"P6920",-"Oficio",-"P6800",-"P6210s1",-"P6240",-"P6100")
#convierto na en ceros de Pet, Oc, Des, Ina
BD_Ent_Per_Lim <- mutate_at(BD_Ent_Per_Lim, c("Pet","Oc","Des","Ina"), ~replace(., is.na(.), 0))
#Variable ¿recibió pagos por concepto de arriendos y/o pensiones? (P7495)
BD_Ent_Per_Lim<-BD_Ent_Per_Lim%>%subset(is.na(P7495)==F)   ##Borrar NA´s
#Durante los últimos doce meses, ¿recibió dinero de otros hogares,
#personas o instituciones no gubernamentales; dinero por intereses,
#dividendos, utilidades o por cesantias? (P7505)
BD_Ent_Per_Lim<-BD_Ent_Per_Lim%>%subset(is.na(P7505)==F)   ##Borrar NA´s
##Asignar NA´s a cat 9
BD_Ent_Per_Lim$P6090 <-ifelse(is.na(BD_Ent_Per_Lim$P6090)==T,  9,BD_Ent_Per_Lim$P6090)
#Volver variables categoricas
BD_Ent_Per_Lim <- BD_Ent_Per_Lim %>%
mutate_at(.vars = c("Clase","Dominio","P6020","P6050","P6090",
"P7495","P6210","P7505","Pet","Oc","Des","Ina"),
.funs = factor)
#Na´s
cantidad_na <- sapply(BD_Ent_Per_Lim, function(x) sum(is.na(x)))
cantidad_na <- data.frame(cantidad_na)
porcentaje_na <- cantidad_na/nrow(BD_Ent_Per_Lim)
porcentaje_na <- arrange(porcentaje_na, desc(cantidad_na)) # Ordenamos de mayor a menor
porcentaje_na <- rownames_to_column(porcentaje_na, "variable")# Convertierte el nombre de la fila en columna
write.csv(porcentaje_na, file="CantidadNa_BD_Ent_Per_Lim.csv", row.names = FALSE)
VectorAuxIngreso<- BD_Ent_Per_Lim %>% group_by(id) %>%
summarize(sum_Ingtot=sum(Ingtot))
dim(VectorAuxIngreso)
#p6090, cotizante-beneficiario seg social, 1 si, 2 no, 9 no sabe
table(BD_Ent_Per_Lim$P6090) # sirve
#p6210, Max educ. 1.Ninguno 2.Prescolar 3.Primaria 4.Secundaria 5.Media 6.Superior 9. No sabe
table(BD_Ent_Per_Lim$P6210) # sirve
#p7495, Recibio pago por arriendo y/o pension? 1. Si 2. No
table(BD_Ent_Per_Lim$P7495) # sirve
#p7505, Recibio dinero de otros hogares, instituciones, intereses, dividendos o uti censantias. 1.Si 2.No
table(BD_Ent_Per_Lim$P7505) # sirve
#con lo siguiente queda solo info del jefe hogar
BD_Ent_Per_Lim<-BD_Ent_Per_Lim%>%subset(P6050=="1")
dim(BD_Ent_Per_Lim)
#unir BD_Ent_Per_Lim con VectorAuxIngreso
BD_Ent_Per_Lim<-left_join(BD_Ent_Per_Lim,VectorAuxIngreso, by="id")
dim(BD_Ent_Per_Lim)
#borrar variables q ya no sirve
BD_Ent_Per_Lim<-BD_Ent_Per_Lim %>%
select(-"Ingtot",-"Clase",-"Dominio")
#2. Unir bases de datos de entrenamiento
dim(BD_Ent_Hog_Lim)
dim(BD_Ent_Per_Lim)
BD_Ent_Hog_Lim<-left_join(BD_Ent_Hog_Lim,BD_Ent_Per_Lim, by="id")
dim(BD_Ent_Hog_Lim)
View(BD_Ent_Hog_Lim)
# 3. Pretratamiento BD_Pru_Per_Lim
#p6020, sexo, no relevante
#p6040, edad, no relevante
#p6050, parentesco con jefe hogar, 1 Jefe Hogar
#p6090, cotizante-beneficiario seg social, 1 si, 2 no, 9 no sabe
table(BD_Pru_Per_Lim$P6090) # sirve
#p6210, Max educ. 1.Ninguno 2.Prescolar 3.Primaria 4.Secundaria 5.Media 6.Superior 9. No sabe
table(BD_Pru_Per_Lim$P6210) # sirve
#p7495, Recibio pago por arriendo y/o pension? 1. Si 2. No
table(BD_Pru_Per_Lim$P7495) # sirve
#p7505, Recibio dinero de otros hogares, instituciones, intereses, dividendos o uti censantias. 1.Si 2.No
table(BD_Pru_Per_Lim$P7505) # sirve
#con lo siguiente queda solo info del jefe hogar
BD_Pru_Per_Lim<-BD_Pru_Per_Lim%>%subset(P6050=="1")
dim(BD_Pru_Per_Lim)
#borrar variables q ya no sirve
BD_Pru_Per_Lim<-BD_Pru_Per_Lim %>%
select(-"Clase",-"Dominio")
#2. Unir bases de datos de entrenamiento
dim(BD_Pru_Hog_Lim)
dim(BD_Pru_Per_Lim)
BD_Pru_Hog_Lim<-left_join(BD_Pru_Hog_Lim,BD_Pru_Per_Lim, by="id")
dim(BD_Pru_Hog_Lim)
View(BD_Ent_Per_Lim)
View(BD_Ent_Hog_Lim)
table(BD_Pru_Per_Lim$P6090) # sirve
View(BD_Ent_Hog_Lim)
